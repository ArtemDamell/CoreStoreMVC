@model CoreStoreMVC.Models.ViewModel.AppointmentDetailsViewModel

@using CoreStoreMVC.Extensions
@using CoreStoreMVC.Utility

@{
    ViewData["Title"] = "Edit";
}

<h2 class="mt-1 text-info">Edit Appointment</h2>

<form method="post" enctype="multipart/form-data">
    <div class="p-4 border rounded row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="@Model.Appointment.Id" />
        <div class="col-6">
            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerFirstName"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="Appointment.CustomerFirstName" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerLastName"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.CustomerLastName" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerEmail"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.CustomerEmail" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerPhoneNumber"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.CustomerPhoneNumber" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.Adress"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.Adress" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.Index"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.Index" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.City"></label>
                </div>
                <div class="col-8">
                    <input readonly asp-for="@Model.Appointment.City" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.AppointmentDay"></label>
                </div>
                <div class="col-8">
                    <input type="date" asp-for="@Model.Appointment.AppointmentDay" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.AppointmentDay" class="text-danger"></span>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.AppointmentTime"></label>
                </div>
                <div class="col-8">
                    <input type="time" asp-for="@Model.Appointment.AppointmentTime" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.AppointmentTime" class="text-danger"></span>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.SalesPerson"></label>
                </div>
                <div class="col-8">
                    @if (User.IsInRole(SD.AdminEndUser))
                    {
                        <input asp-for="@Model.Appointment.SalesPerson.Name" readonly class="form-control" />
                        <input asp-for="@Model.Appointment.SalesPersonId" hidden />
                    }
                    else
                    {
                        <select asp-for="@Model.Appointment.SalesPersonId" asp-items="Model.SalesPerson.ToSelectListItemString(Model.Appointment.SalesPersonId)" class="form-control"></select>
                    }
                </div>
            </div>

            <div class="row form-group">
                <div class="col-4">
                    <label asp-for="Appointment.IsConfirmed"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.IsConfirmed" class="form-control" />
                </div>
            </div>
        </div>
        <div class="col-6">
            <partial name="_AppointmentProductDetails" model="Model.Products" />
        </div>
        <div class="row">
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Edit" />
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}